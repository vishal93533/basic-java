STRING : Strings are the type of objects that can store the character of values. 
          a string acts the same as an array of characters in Java.


    syntax : 1 - String str = "Geeks";
             2 - String s = new String (“GeeksforGeeks”);


  example :

         
// Java Program to demonstrate
// String
public class StringExample {
 
    // Main Function
    public static void main(String args[])
    {
        String s1 = new String("example");
        // creating Java string by new keyword
        // this statement create two object i.e
        // first the object is created in heap
        // memory area and second the object is
        // created in String constant pool.
 
        System.out.println(s1);
    }
}

CharSequence Interface

CharSequence Interface is used for representing the sequence of Characters in Java. 
Classes that are implemented using the CharSequence interface are mentioned below:

1. String
2. StringBuffer
3. StringBuilder

    1. StringBuffer
               StringBuffer is a peer class of String that provides much of the functionality of strings.
               The string represents fixed-length, immutable character sequences while StringBuffer represents 
               growable and writable character sequences.
          

           syntax:  StringBuffer s = new StringBuffer("GeeksforGeeks");

    3. StringBuilder

               in Java represents a mutable sequence of characters. 
               Since the String Class in Java creates an immutable sequence of characters, 
               the StringBuilder class provides an alternative to String Class, 
               as it creates a mutable sequence of characters.
     

        syntax :
            
             StringBuilder str = new StringBuilder();
             str.append("GFG");